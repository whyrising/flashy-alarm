import com.github.whyrising.flashyalarm.Ci
import com.github.whyrising.flashyalarm.Libs

plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId 'com.github.whyrising.flashyalarm'
        minSdkVersion 23
        targetSdkVersion 32
        versionCode 1
        versionName Ci.publishVersion
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        vectorDrawables {
            useSupportLibrary true
        }
    }

    packagingOptions {
        resources {
            excludes += ['/*.jar', '/META-INF/{AL2.0,LGPL2.1}']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion Libs.Compose.version
    }

    testOptions {
        animationsDisabled = true
        unitTests.all {
            useJUnitPlatform()
            testLogging { events("passed", "skipped", "failed") }
            if (name == "testDebugUnitTest") {
                kover {
                    disabled = false
                    binaryReportFile.set(file("$buildDir/custom/debug-report.bin"))
                    includes = ['com.github.whyrising.flashyalarm.*']
                    excludes = ['com.example.subpackage.*']
                }
            }
        }
    }
}

dependencies {
    implementation Libs.Compose.ui
    // Tooling support (Previews, etc.)
    implementation Libs.Compose.uiTooling
    implementation Libs.Compose.uiToolingPreview
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation Libs.Compose.foundation
    // Material Design
    implementation Libs.Compose.material
    // Material design icons
    implementation Libs.Compose.iconsCore
    implementation Libs.Compose.iconsExt
    // Integration with activities
    implementation Libs.Activity.compose
    // Integration with ViewModels
    implementation Libs.Lifecycle.vmCompose
    // Tree composition support for code generated by the Compose compiler plugin.
    implementation Libs.Compose.runtime
    // Navigation
    implementation Libs.Navigation.compose
    // Navigation animation
    implementation Libs.Accompanist.navAnimation
    // Control system UI components such as statusBar color etc.
    implementation Libs.Accompanist.systemUi
    // UI Tests
    androidTestImplementation Libs.Compose.uiTesting

    implementation Libs.Androidx.coreKtx
    implementation Libs.Lifecycle.runtime

    implementation Libs.Androidx.splash

    implementation Libs.Recompose.recompose

    implementation Libs.Y.concurrency

    testImplementation Libs.Kotest.runner
    testImplementation Libs.Kotest.property
    testImplementation Libs.Kotest.assertions

    coreLibraryDesugaring Libs.jdkDesugar
}
